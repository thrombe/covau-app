export type Typ = "YtSong" | "YtAlbum" | "YtPlaylist" | "YtArtist";
export type MusicListItem = { type: "Song"; content: Song } | { type: "Album"; content: Album } | { type: "Playlist"; content: Playlist } | { type: "Artist"; content: Artist };
export type BrowseQuery = { type: "Search"; content: { search: Typ; query: string } } | { type: "VideoSearch"; content: { query: string } } | { type: "ArtistSongs"; content: ArtistId } | { type: "ArtistReleases"; content: ArtistId } | { type: "Album"; content: AlbumId } | { type: "Playlist"; content: PlaylistId } | { type: "UpNext"; content: VideoId } | { type: "SongIds"; content: { ids: VideoId[]; batch_size: number } } | { type: "HomeFeed" };
export type Thumbnail = { url: string; width: number; height: number };
export type Album = { id: string; title: string | null; thumbnails: Thumbnail[]; author: Author | null };
export type SmolAlbum = { name: string | null; id: string };
export type Artist = { id: string; name: string | null; subscribers: string | null; thumbnails: Thumbnail[] };
export type Author = { name: string; channel_id: string | null };
export type Playlist = { id: string; title: string | null; thumbnails: Thumbnail[]; author: Author | null };
export type Song = { id: string; title: string | null; thumbnails: Thumbnail[]; authors: Author[]; album: SmolAlbum | null };
export type VideoId = string;
export type AlbumId = string;
export type ChannelId = string;
export type ArtistId = ChannelId;
export type PlaylistId = string;
export type SearchResults<T> = { has_next_page: boolean; items: T[] };
export type YtiRequest = { type: "CreateSongTube"; content: { id: string; query: BrowseQuery } } | { type: "DestroySongTube"; content: { id: string } } | { type: "NextPageSongTube"; content: { id: string } };
